INSERT INTO USER_RIGHT_TABLE(NAME, CATEGORY, INTERNAL_RIGHT, RIGHT_TYPE, RIGHT, IDX, COMMENTS)
	SELECT 'Emafi Admin', 'EMAFI', 0, 2, -1, (SELECT MAX(IDX) + 1 from USER_RIGHT_TABLE), 'Right to view configuration window'
	FROM DUAL
	WHERE NOT EXISTS (SELECT * FROM USER_RIGHT_TABLE WHERE NAME = 'Emafi Admin');
	
INSERT INTO USER_RIGHT_TABLE(NAME, CATEGORY, INTERNAL_RIGHT, RIGHT_TYPE, RIGHT, IDX, COMMENTS)
	SELECT 'Profile 1', 'EMAFI', 0, 2, -1, (SELECT MAX(IDX) + 1 from USER_RIGHT_TABLE), 'Right to insert, consult and delete ODs'
	FROM DUAL
	WHERE NOT EXISTS (SELECT * FROM USER_RIGHT_TABLE WHERE NAME = 'Profile 1');

INSERT INTO USER_RIGHT_TABLE(NAME, CATEGORY, INTERNAL_RIGHT, RIGHT_TYPE, RIGHT, IDX, COMMENTS)
	SELECT 'Profile 2', 'EMAFI', 0, 2, -1, (SELECT MAX(IDX) + 1 from USER_RIGHT_TABLE), 'Right to insert, consult, validate to Ready and delete ODs'
	FROM DUAL
	WHERE NOT EXISTS (SELECT * FROM USER_RIGHT_TABLE WHERE NAME = 'Profile 2');
	
INSERT INTO USER_RIGHT_TABLE(NAME, CATEGORY, INTERNAL_RIGHT, RIGHT_TYPE, RIGHT, IDX, COMMENTS)
	SELECT 'Profile 3', 'EMAFI', 0, 2, -1, (SELECT MAX(IDX) + 1 from USER_RIGHT_TABLE), 'Right to insert, consult, validate to Sent and delete ODs'
	FROM DUAL
	WHERE NOT EXISTS (SELECT * FROM USER_RIGHT_TABLE WHERE NAME = 'Profile 3');

INSERT INTO ACCOUNT_POSTING_TYPES(ID, NAME, COMMENTS)
	SELECT (SELECT MAX(ID) + 1 FROM ACCOUNT_POSTING_TYPES), 'OD', 'Gestion ODs'
	FROM DUAL
	WHERE NOT EXISTS (SELECT * FROM ACCOUNT_POSTING_TYPES WHERE NAME = 'OD');

CREATE TABLE EMAFI_ODSTATUS
(
	ID_STATUS NUMBER(2) NOT NULL,
	NAME VARCHAR2(30) NOT NULL,
	CRE_STATUS NUMBER(2),
	VALIDATION_CAPTION VARCHAR2(50),
	PROFILE VARCHAR2(50)
);
CREATE UNIQUE INDEX IDX_EMAFI_ODSTATUS_ID ON EMAFI_ODSTATUS(ID_STATUS);
INSERT INTO EMAFI_ODSTATUS(ID_STATUS, NAME, CRE_STATUS, VALIDATION_CAPTION, PROFILE) VALUES(-1, 'Cancelled', NULL, NULL, NULL);
INSERT INTO EMAFI_ODSTATUS(ID_STATUS, NAME, CRE_STATUS, VALIDATION_CAPTION, PROFILE) VALUES(1, 'Pending', 1, NULL, 'Profile 1');
INSERT INTO EMAFI_ODSTATUS(ID_STATUS, NAME, CRE_STATUS, VALIDATION_CAPTION, PROFILE) VALUES(2, 'Ready', 2, 'En Attente de Valid BO', 'Profile 2');
INSERT INTO EMAFI_ODSTATUS(ID_STATUS, NAME, CRE_STATUS, VALIDATION_CAPTION, PROFILE) VALUES(3, 'Sent', 4, 'En Attente de Valid Resp BO', 'Profile 3');

CREATE TABLE EMAFI_CRE
(
	ID_CRE NUMBER(10) NOT NULL,
    ID_POSTING NUMBER(10) NOT NULL,
    ID_TRADE NUMBER(10) NULL,
	TYPE_TRADE NUMBER,
    ENTITY_ID NUMBER(10) NOT NULL,
	ENTITY_NAME VARCHAR2(50),
    ENTITY_DESC VARCHAR2(50),
    PTF_ID NUMBER(10) NULL,
	PTF_NAME VARCHAR2(50),
    PTF_DESC VARCHAR2(50),
    ID_TITRE NUMBER(10),
    ACCOUNT_NUMBER VARCHAR2(50),
    CURRENCY VARCHAR2(3),
    SENS VARCHAR2(1),
    QTE NUMBER,
    AMOUNT NUMBER,
	STATUS NUMBER(2),
    POSTING_DATE DATE,
    GENERATION_DATE DATE,
    CRE_DATE DATE,
	JOURNAL VARCHAR2(100),
	PIECE VARCHAR2(100),
	COMMENTAIRE_CODE VARCHAR2(20),
	COMMENTAIRE_DESC VARCHAR2(100), 
	OPERATEUR NUMBER(10),
	TIERS_ID NUMBER(10),
	TIERS_NAME VARCHAR2(50),
	POSTING_TYPE NUMBER(10),
	OD_NUM NUMBER(10),
	OD_STATUS NUMBER(2),
	VERSION NUMBER(10)
);
CREATE UNIQUE INDEX IDX_EMAFI_CRE_ID ON EMAFI_CRE(ID_CRE);
CREATE UNIQUE INDEX IDX_EMAFI_CRE_ID_POSTING ON EMAFI_CRE(ID_POSTING);
CREATE SEQUENCE EMAFI_CRE_SEQ START WITH 1000 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE EMAFI_CRE_OD_SEQ START WITH 1000 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE TABLE EMAFI_AUDIT_CRE
(
	ID NUMBER(10) NOT NULL,
	USERID NUMBER(10) NOT NULL,
	VERSION NUMBER(10) NOT NULL,
	DATEMODIF DATE NOT NULL,
	ID_CRE NUMBER(10) NOT NULL,
    ID_POSTING NUMBER(10),
    ID_TRADE NUMBER(10),
	TYPE_TRADE NUMBER,
    ENTITY_ID NUMBER(10),
	ENTITY_NAME VARCHAR2(50),
    ENTITY_DESC VARCHAR2(50),
    PTF_ID NUMBER(10),
	PTF_NAME VARCHAR2(50),
    PTF_DESC VARCHAR2(50),
    ID_TITRE NUMBER(10),
    ACCOUNT_NUMBER VARCHAR2(50),
    CURRENCY VARCHAR2(3),
    SENS VARCHAR2(1),
    QTE NUMBER,
    AMOUNT NUMBER,
	STATUS NUMBER(2),
    POSTING_DATE DATE,
    GENERATION_DATE DATE,
    CRE_DATE DATE,
	JOURNAL VARCHAR2(100),
	PIECE VARCHAR2(100),
	COMMENTAIRE_CODE VARCHAR2(20),
	COMMENTAIRE_DESC VARCHAR2(100), 
	OPERATEUR NUMBER(10),
	TIERS_ID NUMBER(10),
	TIERS_NAME VARCHAR2(50),
	POSTING_TYPE NUMBER(10),
	OD_NUM NUMBER(10),
	OD_STATUS NUMBER(2)
);
CREATE UNIQUE INDEX IDX_EMAFI_AUDIT_CRE_ID ON EMAFI_AUDIT_CRE(ID);
CREATE SEQUENCE EMAFI_AUDIT_CRE_SEQ START WITH 1000 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE OR REPLACE TRIGGER EMAFI_CRE_TRG
	AFTER DELETE OR INSERT OR UPDATE ON EMAFI_CRE FOR EACH ROW
DECLARE
BEGIN
	if (inserting or updating) and :new.OD_NUM is not null then
		INSERT INTO EMAFI_AUDIT_CRE(ID, USERID, VERSION, DATEMODIF, ID_CRE,
			ID_POSTING, ID_TRADE, TYPE_TRADE, ENTITY_ID, ENTITY_NAME, ENTITY_DESC, PTF_ID, PTF_NAME, PTF_DESC, ID_TITRE,
			ACCOUNT_NUMBER, CURRENCY, SENS, QTE, AMOUNT, STATUS, POSTING_DATE, GENERATION_DATE, CRE_DATE, JOURNAL, PIECE,
			COMMENTAIRE_CODE, COMMENTAIRE_DESC, OPERATEUR, TIERS_ID, TIERS_NAME, POSTING_TYPE, OD_NUM, OD_STATUS)
		VALUES (EMAFI_AUDIT_CRE_SEQ.NEXTVAL, getuserid, :new.VERSION, SYSdATE, :new.ID_CRE,
			:new.ID_POSTING, :new.ID_TRADE, :new.TYPE_TRADE, :new.ENTITY_ID, :new.ENTITY_NAME, :new.ENTITY_DESC, :new.PTF_ID, :new.PTF_NAME, :new.PTF_DESC, :new.ID_TITRE,
			:new.ACCOUNT_NUMBER, :new.CURRENCY, :new.SENS, :new.QTE, :new.AMOUNT, :new.STATUS, :new.POSTING_DATE, :new.GENERATION_DATE, :new.CRE_DATE, :new.JOURNAL, :new.PIECE,
			:new.COMMENTAIRE_CODE, :new.COMMENTAIRE_DESC, :new.OPERATEUR, :new.TIERS_ID, :new.TIERS_NAME, :new.POSTING_TYPE, :new.OD_NUM, :new.OD_STATUS);
	elsif deleting and :old.OD_NUM is not null then
		INSERT INTO EMAFI_AUDIT_CRE(ID, USERID, VERSION, DATEMODIF, ID_CRE)
		VALUES (EMAFI_AUDIT_CRE_SEQ.NEXTVAL, getuserid, NVL(:old.version, 0) + 1, SYSdATE, :old.ID_CRE);
	end if;
END;

CREATE OR REPLACE TRIGGER EMAFI_CRE_TRG_BEFORE
	BEFORE INSERT OR UPDATE ON EMAFI_CRE FOR EACH ROW
DECLARE
BEGIN
	if inserting and :new.OD_NUM is not null then
		:new.VERSION := 1;
	elsif updating and :old.OD_NUM is not null then
		if :old.VERSION = 0 or :old.VERSION is null then
			:new.VERSION := 1;
		else
			:new.VERSION := :old.VERSION + 1;
		end if;
	end if;
END;

CREATE OR REPLACE VIEW V_EMAFI_CRE
AS
    SELECT AP.ID ID_POSTING, AP.TRADE_ID ID_TRADE, H.TYPE TYPE_TRADE, H.ENTITE ENTITY_ID, T.NAME ENTITY_NAME, NULL ENTITY_DESC,
        P.OPCVM PTF_ID, F.NAME PTF_NAME, NULL PTF_DESC, P.SICOVAM ID_TITRE,
        AP.ACCOUNT_NUMBER, DEVISE_TO_STR(AP.ACCOUNT_CURRENCY) CURRENCY, AP.CREDIT_DEBIT SENS, AP.QUANTITY QTE, AP.AMOUNT, AP.STATUS, AP.POSTING_DATE, AP.GENERATION_DATE
    FROM ACCOUNT_POSTING AP
        JOIN HISTOMVTS H ON H.REFCON = AP.TRADE_ID
		JOIN TIERS T ON T.IDENT = H.ENTITE
		JOIN POSITION P ON P.MVTIDENT = H.MVTIDENT
		JOIN FOLIO F ON F.IDENT = P.OPCVM
    WHERE H.TYPE IN (1, 141)
		AND AP.ID NOT IN (SELECT ID_POSTING FROM EMAFI_CRE)
	UNION
	SELECT ID_POSTING, ID_TRADE, TYPE_TRADE, ENTITY_ID, ENTITY_NAME, ENTITY_DESC,
		PTF_ID, PTF_NAME, PTF_DESC, ID_TITRE, ACCOUNT_NUMBER, CURRENCY, SENS, QTE, AMOUNT, STATUS, POSTING_DATE, GENERATION_DATE
	FROM EMAFI_CRE;

CREATE TABLE EMAFI_RUBRIC
(
	ID NUMBER NOT NULL,
	RUBRIC VARCHAR2(255),
	REPORT_TYPE VARCHAR2(3) NOT NULL,
	REPORT_ORDER NUMBER(3),
	RUBRIC_TYPE VARCHAR2(2)
);
CREATE UNIQUE INDEX IDX_EMAFI_RUBRIC_ID ON EMAFI_RUBRIC(ID);
CREATE UNIQUE INDEX IDX_EMAFI_RUBRIC_TYPE_ORDER ON EMAFI_RUBRIC(REPORT_TYPE, REPORT_ORDER);

CREATE TABLE EMAFI_LABEL
(
	ID NUMBER NOT NULL,
	ID_RUBRIC NUMBER NOT NULL,
	LABEL VARCHAR2(255),
	REPORT_ORDER NUMBER(3),
	QUERY VARCHAR2(400),
	INFO_TYPE VARCHAR2(2),
	SUM VARCHAR2(1),
	ENABLED CHAR DEFAULT 1 CHECK (ENABLED IN (0,1)),
	ID_PARENT NUMBER
);
CREATE UNIQUE INDEX IDX_EMAFI_LABEL ON EMAFI_LABEL(ID);
CREATE UNIQUE INDEX IDX_EMAFI_LABEL_RL ON EMAFI_LABEL(ID_RUBRIC, LABEL);
CREATE UNIQUE INDEX IDX_EMAFI_LABEL_RO ON EMAFI_LABEL(ID_RUBRIC, REPORT_ORDER);

CREATE TABLE EMAFI_ACCOUNT
(
	ACCOUNT_NUMBER VARCHAR2(50) NOT NULL,
	ACCOUNT_TYPE VARCHAR2(50),
	ACCOUNT_DESC VARCHAR2(255),
	ID_LABEL NUMBER
);
CREATE UNIQUE INDEX IDX_EMAFI_ACCOUNT ON EMAFI_ACCOUNT(ACCOUNT_NUMBER, ID_LABEL);

CREATE TABLE EMAFI_REPORT
(
	REPORT_TYPE VARCHAR2(3) NOT NULL,
	ETAT_TYPE VARCHAR2(3) NOT NULL,
	NAME VARCHAR2(50),
    PARAMETERVALUES VARCHAR2(2000),
	REPORT_ORDER NUMBER(3),
	ENABLED CHAR DEFAULT 1 CHECK (ENABLED IN (0,1)),
	WORKSHEET VARCHAR2(50),
	QUERYDESC VARCHAR2(255),
	QUERY CLOB
);
CREATE UNIQUE INDEX IDX_EMAFI_REPORT ON EMAFI_REPORT(REPORT_TYPE);

CREATE TABLE EMAFI_PARAMETRAGE
(
	CATEGORIE VARCHAR2(20) NOT NULL,
	CODE VARCHAR2(20) NOT NULL,
	DESCRIPTION VARCHAR2(100),
	ORDRE NUMBER(3) NOT NULL
);
CREATE UNIQUE INDEX IDX_EMAFI_PARAMETRAGE ON EMAFI_PARAMETRAGE(CATEGORIE, CODE);

CREATE OR REPLACE VIEW V_EMAFI_LABEL
AS
	SELECT T.*, LEVEL NIV FROM EMAFI_LABEL T
	START WITH T.ID_PARENT IS NULL
	CONNECT BY PRIOR ID = ID_PARENT;

CREATE OR REPLACE VIEW V_EMAFI_PARAMETERS
AS
    SELECT ER.REPORT_TYPE, ERE.REPORT_ORDER, ER.ID ID_RUBRIC, ER.RUBRIC, ER.RUBRIC_TYPE, ER.REPORT_ORDER RUBRIC_ORDER,
        EL.LABEL, EL.ID ID_LABEL, EL.NIV, EL.ID_PARENT, EL.REPORT_ORDER LABEL_ORDER, EL.QUERY LABEL_QUERY, EL.INFO_TYPE, EL.SUM LABEL_SUM, EA.ACCOUNT_NUMBER, EA.ACCOUNT_DESC, EA.ACCOUNT_TYPE
    FROM EMAFI_RUBRIC ER
		JOIN EMAFI_REPORT ERE ON ERE.REPORT_TYPE = ER.REPORT_TYPE AND ERE.ENABLED = 1
        LEFT JOIN V_EMAFI_LABEL EL ON EL.ID_RUBRIC = ER.ID
        LEFT JOIN EMAFI_ACCOUNT EA ON EA.ID_LABEL = EL.ID
    WHERE EL.ENABLED = 1 OR EL.ID IS NULL;
/*
CREATE TABLE EMAFI_ACCOUNT
(
	ACCOUNT_NUMBER VARCHAR2(50) NOT NULL,
	ACCOUNT_DESC VARCHAR2(50)
);
CREATE UNIQUE INDEX IDX_EMAFI_ACCOUNT ON EMAFI_ACCOUNT(ACCOUNT_NUMBER);

CREATE TABLE EMAFI_ACCOUNT_LABEL
(
	ACCOUNT_NUMBER VARCHAR2(50) NOT NULL,
	ID_LABEL NUMBER
);
CREATE UNIQUE INDEX IDX_EMAFI_ACCOUNT_LABEL ON EMAFI_ACCOUNT_LABEL(ACCOUNT_NUMBER, ID_LABEL);

CREATE OR REPLACE VIEW V_EMAFI_PARAM
AS
    SELECT ER.REPORT_TYPE, ER.CODE, EL.LABEL, EL.ID, EL.REPORT_ORDER, EA.ACCOUNT_NUMBER, EA.ACCOUNT_DESC
    FROM EMAFI_LABEL EL
        JOIN EMAFI_RUBRIC ER ON ER.ID = EL.ID_RUBRIC
        LEFT JOIN EMAFI_ACCOUNT_LABEL EAL ON EAL.ID_LABEL = EL.ID
        LEFT JOIN EMAFI_ACCOUNT EA ON EA.ACCOUNT_NUMBER = EAL.ACCOUNT_NUMBER
    WHERE EL.ENABLED = 1;
*/